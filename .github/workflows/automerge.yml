name: Dependabot reviewer

on: pull_request_target

permissions:
  pull-requests: write
  contents: write

jobs:
  review-dependabot-pr:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: meta
        uses: dependabot/fetch-metadata@v2.4.0

      # ---- Patch/Minor path ----
      - name: Approve patch/minor
        if: ${{ steps.meta.outputs.update-type == 'version-update:semver-patch' || steps.meta.outputs.update-type == 'version-update:semver-minor' }}
        run: |
          gh pr review "$PR_URL" --approve -b "Approving: patch/minor update."
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge (patch/minor only)
        if: ${{ steps.meta.outputs.update-type == 'version-update:semver-patch' || steps.meta.outputs.update-type == 'version-update:semver-minor' }}
        run: gh pr merge --squash --auto "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extra approval for dev deps (optional)
        if: ${{ (steps.meta.outputs.update-type == 'version-update:semver-patch' || steps.meta.outputs.update-type == 'version-update:semver-minor') && steps.meta.outputs.dependency-type == 'direct:development' }}
        run: |
          gh pr review "$PR_URL" --approve -b "Approving dev-only patch/minor."
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ---- Major path ----
      - name: Label and block majors
        if: ${{ steps.meta.outputs.update-type == 'version-update:semver-major' }}
        run: |
          gh pr comment "$PR_URL" --body "I'm **not approving** this PR because **it includes a major update**."
          gh pr edit "$PR_URL" --add-label "requires-manual-qa"
          echo "Blocking merge for major update."
          exit 1
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
